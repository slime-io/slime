// Code generated by protoc-gen-deepcopy. DO NOT EDIT.
package config

import (
	proto "google.golang.org/protobuf/proto"
)

// DeepCopyInto supports using Fence within kubernetes types, where deepcopy-gen is used.
func (in *Fence) DeepCopyInto(out *Fence) {
	p := proto.Clone(in).(*Fence)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Fence. Required by controller-gen.
func (in *Fence) DeepCopy() *Fence {
	if in == nil {
		return nil
	}
	out := new(Fence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new Fence. Required by controller-gen.
func (in *Fence) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using Dispatch within kubernetes types, where deepcopy-gen is used.
func (in *Dispatch) DeepCopyInto(out *Dispatch) {
	p := proto.Clone(in).(*Dispatch)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dispatch. Required by controller-gen.
func (in *Dispatch) DeepCopy() *Dispatch {
	if in == nil {
		return nil
	}
	out := new(Dispatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new Dispatch. Required by controller-gen.
func (in *Dispatch) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using DomainAlias within kubernetes types, where deepcopy-gen is used.
func (in *DomainAlias) DeepCopyInto(out *DomainAlias) {
	p := proto.Clone(in).(*DomainAlias)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainAlias. Required by controller-gen.
func (in *DomainAlias) DeepCopy() *DomainAlias {
	if in == nil {
		return nil
	}
	out := new(DomainAlias)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new DomainAlias. Required by controller-gen.
func (in *DomainAlias) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}
