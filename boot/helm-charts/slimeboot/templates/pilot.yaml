{{ if .Values.component }}
{{ if .Values.component.pilot }}
{{- if .Values.component.pilot.enable }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-pilot-slime
subjects:
  - kind: ServiceAccount
    name: istio-pilot-service-account
    namespace: {{ $.Values.namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio
  namespace: {{ $.Values.namespace }}
data:
  mesh: |-
    # Set enableTracing to false to disable request tracing.
    enableTracing: true

    # Set accessLogFile to empty string to disable access log.
    accessLogFile: "/dev/stdout"

    enableAutoMtls: false
    enableEnvoyAccessLogService: false
    # reportBatchMaxEntries is the number of requests that are batched before telemetry data is sent to the mixer server
    reportBatchMaxEntries: 100
    # reportBatchMaxTime is the max waiting time before the telemetry data of a request is sent to the mixer server
    reportBatchMaxTime: 1s
    mixerReportServer: istio-telemetry.{{ $.Values.namespace }}.svc.cluster.local:9091
    mixerCheckServer: istio-policy.{{ $.Values.namespace }}.svc.cluster.local:9091

    disablePolicyChecks: true

    # rootNamespace: {{ $.Values.namespace }}

    # This is the k8s ingress service name, update if you used a different name
    ingressService: "istio-ingressgateway"
    ingressControllerMode: "OFF"
    ingressClass: "istio"
    # Set expected values when SDS is disabled
    # Unix Domain Socket through which envoy communicates with NodeAgent SDS to get
    # key/cert for mTLS. Use secret-mount files instead of SDS if set to empty.
    sdsUdsPath: ""
    # This flag is used by secret discovery service(SDS).
    # If set to true(prerequisite: https://kubernetes.io/docs/concepts/storage/volumes/#projected), Istio will inject volumes mount
    # for k8s service account JWT, so that K8s API server mounts k8s service account JWT to envoy container, which
    # will be used to generate key/cert eventually. This isn't supported for non-k8s case.
    enableSdsTokenMount: false
    # This flag is used by secret discovery service(SDS).
    # If set to true, envoy will fetch normal k8s service account JWT from '/var/run/secrets/kubernetes.io/serviceaccount/token'
    # (https://kubernetes.io/docs/tasks/access-application-cluster/access-cluster/#accessing-the-api-from-a-pod)
    # and pass to sds server, which will be used to request key/cert eventually.
    # this flag is ignored if enableSdsTokenMount is set.
    # This isn't supported for non-k8s case.
    sdsUseK8sSaJwt: false

    outboundTrafficPolicy:
      mode: ALLOW_ANY
    localityLbSetting:
      enabled: true


    defaultConfig:
      #
      # TCP connection timeout between Envoy & the application, and between Envoys.
      connectTimeout: 10s
      #
      ### ADVANCED SETTINGS #############
      # Where should envoy's configuration be stored in the istio-proxy container
      configPath: "/etc/istio/proxy"
      # The pseudo service name used for Envoy.
      serviceCluster: istio-proxy
      # These settings that determine how long an old Envoy
      # process should be kept alive after an occasional reload.
      drainDuration: 45s
      parentShutdownDuration: 1m0s
      #
      # Port where Envoy listens (on local host) for admin commands
      # You can exec into the istio-proxy container in a pod and
      # curl the admin port (curl http://localhost:15000/) to obtain
      # diagnostic information from Envoy. See
      # https://lyft.github.io/envoy/docs/operations/admin.html
      # for more details
      proxyAdminPort: 15000
      #
      # Set concurrency to a specific number to control the number of Proxy worker threads.
      # If set to 0 (default), then start worker thread for each CPU thread/core.
      concurrency: 2
      #
      tracing:
        zipkin:
          # Address of the Zipkin collector
          address: zipkin.istio-telemetry:9411
      #
      # Mutual TLS authentication between sidecars and istio control plane.
      controlPlaneAuthPolicy: NONE
      #
      # Address where istio Pilot service is running
      discoveryAddress: istio-pilot.istio-v13:15010

  meshNetworks: |-
    # Network config
    networks: {}
  values.yaml: |-
    appNamespaces: []
    autoscaleEnabled: false
    autoscaleMax: 5
    autoscaleMin: 1
    configMap: true
    configNamespace: istio-config
    cpu:
      targetAverageUtilization: 80
    enableRedisCluster: true
    env:
      GODEBUG: gctrace=1
    image: pilot:1.3.5-8fe1f8ea3edb9a8177cf0630a466c12ad8d89ffa
    ingress:
      ingressClass: istio
      ingressControllerMode: "OFF"
      ingressService: istio-ingressgateway
    keepaliveMaxServerConnectionAge: 30m
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /ready
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 15
    meshNetworks:
      networks: {}
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    policy:
      enabled: false
    replicaCount: 1
    resources:
      requests:
        cpu: 500m
        memory: 2048Mi
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sidecar: false
    telemetry:
      enabled: true
    tolerations: []
    traceSampling: 1
    useMCP: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: global-sidecar-pilot
  namespace: {{ $.Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      istio: pilot
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-volume: ed521864d32d701035ce91edefc645cb606e7fa0c7bf971ed2af09ca45aba460
        checksum/config-volume-envoy: c5ca26039d50542de673a4a578803a5d69f4c85fcd033f9c4a672ffb7cd4052f
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        app: pilot
        istio: pilot
    spec:
      {{- with $.Values.component.pilot.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
              weight: 2
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
              weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      containers:
        - args:
            - discovery
            - --monitoringAddr=:15014
            - --log_output_level=default:info
            - --domain
            - cluster.local
            - --keepaliveMaxServerConnectionAge
            - 30m
            - --ext-header=x-nsf-app:{nsf.skiff.netease.com/app}.{namespace}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: GODEBUG
              value: gctrace=1
            - name: PILOT_TRACE_SAMPLING
              value: "1"
            - name: CONFIG_NAMESPACE
              value: istio-config
            - name: PILOT_RESTRICT_POD_UP_TRAFFIC_LOOP
              value: "false"
            - name: PILOT_SIDECAR_USE_REMOTE_ADDRESS
              value: "true"
            - name: DISABLE_CA_CERT_NAMESPACE_CONFIG_UPDATE
              value: "true"
          {{- if $.Values.component.pilot.image.tag }}
          image: "{{ $.Values.component.pilot.image.repository }}:{{ $.Values.component.pilot.image.tag}}"
          {{- else }}
          image: "{{ $.Values.component.pilot.image.repository }}"
          {{- end }}
          imagePullPolicy: IfNotPresent
          name: discovery
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 15010
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
           {{- toYaml $.Values.component.pilot.resources | nindent 12 }}         
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/istio/config
              name: config-volume
            - mountPath: /var/run/secrets/istio-dns
              name: local-certs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      serviceAccount: istio-pilot-service-account
      serviceAccountName: istio-pilot-service-account
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir:
            medium: Memory
          name: local-certs
        - configMap:
            defaultMode: 420
            name: istio
          name: config-volume
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-pilot-service-account
  namespace: {{ $.Values.namespace }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pilot
    istio: pilot
    release: istio-v13-pilot
  name: istio-pilot
  namespace: {{ $.Values.namespace }}
spec:
  ports:
    - name: grpc-xds
      port: 15010
      protocol: TCP
      targetPort: 15010
    - name: https-xds
      port: 15011
      protocol: TCP
      targetPort: 15011
    - name: http-legacy-discovery
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: http-monitoring
      port: 15014
      protocol: TCP
      targetPort: 15014
  selector:
    istio: pilot
  sessionAffinity: None
  type: ClusterIP
  {{ end }}
  {{ end }}
  {{ end }}
