{{ range .Values.module }}
{{- if .enable }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace}}
data:
  cfg: |
    {{ . | toJson }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{.name }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app: {{.name }}
  template:
    metadata:
      labels:
        app: {{.name }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{.name}}
      securityContext:
      {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: slime
          securityContext:
          {{- toYaml $.Values.containerSecurityContext | nindent 12 }}
          {{- if $.Values.image.tag }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag}}"
          {{- else }}
          image: "{{ $.Values.image.repository }}"
          {{- end }}
          command:
            - /manager
          args:
            - --enable-leader-election
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "slime"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: probe-port
              containerPort: {{ $.Values.healthProbePort }}
          resources:
          {{- toYaml $.Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: "/modules/readyz"
              port: probe-port
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: "/modules/livez"
              port: probe-port
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 2
          volumeMounts:
            - mountPath: /etc/slime/config
              name: config-volume
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ .name }}
          name: config-volume
      {{- with $.Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
  {{- toYaml . | nindent 8 }}
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{.name}}
subjects:
  - kind: ServiceAccount
    name: {{.name}}
    namespace: {{ $.Values.namespace}}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
  {{- if $.Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace}}
  labels:
    app: {{ .name }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace}}
  labels:
    app: {{.name}}
spec:
  type: {{ $.Values.service.type }}
  ports:
    - port: {{ $.Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{.name}}
  {{end}}
  {{end}}
