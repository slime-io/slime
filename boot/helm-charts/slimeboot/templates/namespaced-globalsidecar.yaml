{{ if .Values.component }}
{{ if .Values.component.globalSidecar }}
{{ if .Values.component.globalSidecar.enable }}
{{ with (eq  .Values.component.globalSidecar.type "namespaced") }}
  {{ range $_,$ns :=  $.Values.component.globalSidecar.namespace }}
  {{- $istioNamespace := $ns }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: global-sidecar
  namespace: {{ $ns }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qz-ingress
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        app: qz-ingress
        nsf.skiff.netease.com/app: qz-ingress
        nsf.skiff.netease.com/isIngress: "true"
    spec:
      {{- with $.Values.component.globalSidecar.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
              weight: 2
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
              weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      containers:
        - args:
            - proxy
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --log_output_level=default:info
            - --drainDuration
            - 45s
            - --parentShutdownDuration
            - 1m0s
            - --connectTimeout
            - 10s
            - --serviceCluster
            - qz-ingress
            - --zipkinAddress
            - zipkin.istio-system:9411
            - --proxyAdminPort
            - "15000"
            - --statusPort
            - "15020"
            - --controlPlaneAuthPolicy
            - NONE
            - --discoveryAddress
            - istio-pilot.{{ $.Values.namespace }}:15010
          env:
            {{- range $.Values.module }}
            {{- if .fence }}
            {{- if .global }}
            {{- if .global.misc }}
            {{- if .global.misc.metric_source_type }}
            {{- if (eq .global.misc.metric_source_type "accesslog") }}
            - name: ISTIO_BOOTSTRAP_OVERRIDE
              value: /etc/istio/custom-bootstrap/custom_bootstrap.json
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: PROXY_CONFIG
              value: |
                {"discoveryAddress":"istio-pilot.{{ $.Values.namespace }}:15010","proxyMetadata":{"DNS_AGENT":""},"controlPlaneAuthPolicy":"NONE"}
            - name: ISTIO_META_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: ISTIO_META_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ISTIO_META_ROUTER_MODE
              value: sni-dnat
            - name: ISTIO_META_INTERCEPTION_MODE
              value: NONE
            - name: ISTIO_METAJSON_ANNOTATIONS
              value: '{"sidecar.istio.io/statsInclusionPrefixes": "listener,cluster.outbound,cluster_manager,listener_manager,http_mixer_filter,tcp_mixer_filter,server,cluster.xds-grpc"}'
          {{- if $.Values.component.globalSidecar.image.tag }}
          image: "{{ $.Values.component.globalSidecar.image.repository }}:{{ $.Values.component.globalSidecar.image.tag}}"
          {{- else }}
          image: "{{ $.Values.component.globalSidecar.image.repository }}"
          {{- end }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 600
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 15
          name: istio-proxy
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
           {{- toYaml $.Values.component.globalSidecar.resources | nindent 12 }}         
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/certs
              name: istio-certs
              readOnly: true
            {{- range $.Values.module }}
            {{- if .fence }}
            {{- if .global }}
            {{- if .global.misc }}
            {{- if .global.misc.metric_source_type }}
            {{- if (eq .global.misc.metric_source_type "accesslog") }}
            - mountPath: /etc/istio/custom-bootstrap
              name: custom-bootstrap-volume
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      serviceAccountName: global-sidecar
      terminationGracePeriodSeconds: 30
      volumes:
        - name: istio-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio.global-sidecar
        {{- range $.Values.module }}
        {{- if .fence }}
        {{- if .global }}
        {{- if .global.misc }}
        {{- if .global.misc.metric_source_type }}
        {{- if (eq .global.misc.metric_source_type "accesslog") }}
        - name: custom-bootstrap-volume
          configMap:
            defaultMode: 420
            name: lazyload-accesslog-source
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: global-sidecar
  namespace: {{ $ns }}
---
apiVersion: v1
kind: Service
metadata:
  name: global-sidecar
  namespace: {{$ns}}
spec:
  ports:
    {{range $.Values.module }}
    {{ if .fence }}
    {{ range .fence.wormholePort}}
    - name: http-{{ . }}
      port: {{ int . }}
      protocol: TCP
      targetPort: {{ int . }}
  {{end}}
  {{end}}
  {{end}}
  selector:
    app: qz-ingress
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: to-global-sidecar
  namespace: {{$istioNamespace}}
spec:
  configPatches:
  {{- range $.Values.module }}
  {{- if .fence }}
  {{- $f := .fence }}
  {{- range $f.wormholePort}}
  - applyTo: VIRTUAL_HOST
    match:
      routeConfiguration:
        name: "{{ . }}"
        vhost:
          name: allow_any
    patch:
      operation: REMOVE
  - applyTo: ROUTE_CONFIGURATION
    match:
      routeConfiguration:
        name: "{{ . }}"
    patch:
      operation: MERGE
      value:
        virtual_hosts:
          {{- if $f.dispatches }}
          {{- $svcPort := . }}
          {{- range $f.dispatches }}
          - domains: {{ toYaml .domains | nindent 12 }}
            name: {{ .name }}
            routes:
              - match:
                  prefix: /
                route:
                  {{- if (eq .cluster "_GLOBAL_SIDECAR") }}
                  cluster: outbound|{{$svcPort}}||global-sidecar.{{$ns}}.svc.cluster.local
                  {{- else }}
                  cluster: {{ tpl .cluster $ }}
                  # (dict "fence" $f "dispatch" . "root" $ "Template" (dict "BasePath" "xx"))
                  {{- end }}
          {{- end }}
          {{ else }}
          - domains:
              - '*'
            name: to_global_sidecar
            routes:
              - match:
                  prefix: /
                route:
                  cluster: outbound|{{.}}||global-sidecar.{{$ns}}.svc.cluster.local
          {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
---
{{- range $.Values.module }}
{{- if .fence }}
{{- if .global }}
{{- if .global.misc }}
{{- if .global.misc.metric_source_type }}
{{- if (eq .global.misc.metric_source_type "accesslog") }}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: global-sidecar-accesslog
  namespace: {{$istioNamespace}}
spec:
  workloadSelector:
    labels:
      app: qz-ingress
  configPatches:
    - applyTo: NETWORK_FILTER
      match:
        #context: GATEWAY
        listener:
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
      patch:
        operation: MERGE
        value:
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
            access_log:
              - name: envoy.access_loggers.http_grpc
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig
                  common_config:
                    log_name: http_envoy_accesslog
                    transport_api_version: "V3"
                    grpc_service:
                      envoy_grpc:
                        #cluster_name: outbound|{{$.Values.service.logSourcePort}}||{{$.Values.name}}.{{$.Values.namespace}}.svc.cluster.local
                        cluster_name: lazyload-accesslog-source
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
---
{{- range $.Values.module }}
{{- if .fence }}
{{- if .global }}
{{- if .global.misc }}
{{- if .global.misc.metric_source_type }}
{{- if (eq .global.misc.metric_source_type "accesslog") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: lazyload-accesslog-source
  namespace: {{$istioNamespace}}
data:
  custom_bootstrap.json: |
    {
      "static_resources": {
        "clusters": [{
          "name": "lazyload-accesslog-source",
          "type": "STRICT_DNS",
          "connect_timeout": "5s",
          "http2_protocol_options": {},
          "dns_lookup_family": "V4_ONLY",
          "load_assignment": {
            "cluster_name": "lazyload-accesslog-source",
            "endpoints": [{
              "lb_endpoints": [{
                "endpoint": {
                  "address": {
                    "socket_address": {
                      "address": "{{.name}}.{{$.Values.namespace}}",
                      "port_value": {{$.Values.service.logSourcePort}}
                    }
                  }
                }
              }]
            }]
          },
          "respect_dns_ttl": true
        }]
      }
    }
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
  {{ end }}
  {{ end }}
  {{ end }}
  {{ end }}
  {{ end }}
