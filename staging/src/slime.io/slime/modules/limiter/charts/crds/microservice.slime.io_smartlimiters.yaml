---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.0
  creationTimestamp: null
  name: smartlimiters.microservice.slime.io
spec:
  group: microservice.slime.io
  names:
    kind: SmartLimiter
    listKind: SmartLimiterList
    plural: smartlimiters
    singular: smartlimiter
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: SmartLimiter is the Schema for the smartlimiters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              gateway:
                description: is gateway
                type: boolean
              host:
                description: hostname specify svc host
                type: string
              rls:
                description: deprecated, mv to limiter_module.proto
                type: string
              sets:
                additionalProperties:
                  properties:
                    descriptor:
                      description: Description of current rate-limit
                      items:
                        properties:
                          action:
                            properties:
                              fill_interval:
                                properties:
                                  nanos:
                                    description: Signed fractions of a second at nanosecond
                                      resolution of the span of time. Durations less
                                      than one second are represented with a 0 `seconds`
                                      field and a positive or negative `nanos` field.
                                      For durations of one second or more, a non-zero
                                      value for the `nanos` field must be of the same
                                      sign as the `seconds` field. Must be from -999,999,999
                                      to +999,999,999 inclusive.
                                    format: int32
                                    type: integer
                                  seconds:
                                    description: 'Signed seconds of the span of time.
                                      Must be from -315,576,000,000 to +315,576,000,000
                                      inclusive. Note: these bounds are computed from:
                                      60 sec/min * 60 min/hr * 24 hr/day * 365.25
                                      days/year * 10000 years'
                                    format: int32
                                    type: integer
                                type: object
                              headers_to_add:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              quota:
                                type: string
                              strategy:
                                type: string
                            type: object
                          condition:
                            type: string
                          custom_key:
                            type: string
                          custom_value:
                            type: string
                          match:
                            items:
                              properties:
                                exact_match:
                                  description: If specified, header match will be
                                    performed based on the value of the header.
                                  type: string
                                invert_match:
                                  description: If specified, the match result will
                                    be inverted before checking. Defaults to false.
                                    * The regex “\d{3}“ does not match the value *1234*,
                                    so it will match when inverted.
                                  type: boolean
                                is_exact_match_empty:
                                  description: if specified, the exact match the value
                                    ""
                                  type: boolean
                                matchSource:
                                  description: match source, from header or query
                                    or json body
                                  format: int32
                                  type: integer
                                name:
                                  type: string
                                prefix_match:
                                  description: '* The prefix *abcd* matches the value
                                    *abcdxyz*, but not for *abcxyz*.'
                                  type: string
                                present_match:
                                  description: If specified as true, header match
                                    will be performed based on whether the header
                                    is in the request. If specified as false, header
                                    match will be performed based on whether the header
                                    is absent.
                                  type: boolean
                                present_match_separate:
                                  description: similar to present_match, the difference
                                    is that the different values have separate token
                                    while present_match shares token it only works
                                    in envoy.filters.http.ratelimit (global)
                                  type: boolean
                                regex_match:
                                  description: If specified, this regex string is
                                    a regular expression rule which implies the entire
                                    request header value must match the regex. The
                                    rule will not match if only a subsequence of the
                                    request header value matches the regex.
                                  type: string
                                suffix_match:
                                  description: '* The suffix *abcd* matches the value
                                    *xyzabcd*, but not for *xyzbcd*.'
                                  type: string
                                useQueryMatch:
                                  description: deprecated if query_match is true,
                                    ues query match instead of header match
                                  type: boolean
                              type: object
                            type: array
                          target:
                            properties:
                              direction:
                                type: string
                              host:
                                items:
                                  type: string
                                type: array
                              port:
                                format: int32
                                type: integer
                              route:
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      type: array
                  type: object
                description: subset rate-limit,the key is subset name.
                type: object
              target:
                description: rate limit target
                properties:
                  direction:
                    type: string
                  host:
                    items:
                      type: string
                    type: array
                  port:
                    format: int32
                    type: integer
                  route:
                    items:
                      type: string
                    type: array
                type: object
              workloadSelector:
                additionalProperties:
                  type: string
                description: workload selector , it should not be nil in Gateway Scenarios
                type: object
            type: object
          status:
            properties:
              metricStatus:
                additionalProperties:
                  type: string
                type: object
              ratelimitStatus:
                additionalProperties:
                  properties:
                    descriptor:
                      description: Description of current rate-limit
                      items:
                        properties:
                          action:
                            properties:
                              fill_interval:
                                properties:
                                  nanos:
                                    description: Signed fractions of a second at nanosecond
                                      resolution of the span of time. Durations less
                                      than one second are represented with a 0 `seconds`
                                      field and a positive or negative `nanos` field.
                                      For durations of one second or more, a non-zero
                                      value for the `nanos` field must be of the same
                                      sign as the `seconds` field. Must be from -999,999,999
                                      to +999,999,999 inclusive.
                                    format: int32
                                    type: integer
                                  seconds:
                                    description: 'Signed seconds of the span of time.
                                      Must be from -315,576,000,000 to +315,576,000,000
                                      inclusive. Note: these bounds are computed from:
                                      60 sec/min * 60 min/hr * 24 hr/day * 365.25
                                      days/year * 10000 years'
                                    format: int32
                                    type: integer
                                type: object
                              headers_to_add:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              quota:
                                type: string
                              strategy:
                                type: string
                            type: object
                          condition:
                            type: string
                          custom_key:
                            type: string
                          custom_value:
                            type: string
                          match:
                            items:
                              properties:
                                exact_match:
                                  description: If specified, header match will be
                                    performed based on the value of the header.
                                  type: string
                                invert_match:
                                  description: If specified, the match result will
                                    be inverted before checking. Defaults to false.
                                    * The regex “\d{3}“ does not match the value *1234*,
                                    so it will match when inverted.
                                  type: boolean
                                is_exact_match_empty:
                                  description: if specified, the exact match the value
                                    ""
                                  type: boolean
                                matchSource:
                                  description: match source, from header or query
                                    or json body
                                  format: int32
                                  type: integer
                                name:
                                  type: string
                                prefix_match:
                                  description: '* The prefix *abcd* matches the value
                                    *abcdxyz*, but not for *abcxyz*.'
                                  type: string
                                present_match:
                                  description: If specified as true, header match
                                    will be performed based on whether the header
                                    is in the request. If specified as false, header
                                    match will be performed based on whether the header
                                    is absent.
                                  type: boolean
                                present_match_separate:
                                  description: similar to present_match, the difference
                                    is that the different values have separate token
                                    while present_match shares token it only works
                                    in envoy.filters.http.ratelimit (global)
                                  type: boolean
                                regex_match:
                                  description: If specified, this regex string is
                                    a regular expression rule which implies the entire
                                    request header value must match the regex. The
                                    rule will not match if only a subsequence of the
                                    request header value matches the regex.
                                  type: string
                                suffix_match:
                                  description: '* The suffix *abcd* matches the value
                                    *xyzabcd*, but not for *xyzbcd*.'
                                  type: string
                                useQueryMatch:
                                  description: deprecated if query_match is true,
                                    ues query match instead of header match
                                  type: boolean
                              type: object
                            type: array
                          target:
                            properties:
                              direction:
                                type: string
                              host:
                                items:
                                  type: string
                                type: array
                              port:
                                format: int32
                                type: integer
                              route:
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      type: array
                  type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
