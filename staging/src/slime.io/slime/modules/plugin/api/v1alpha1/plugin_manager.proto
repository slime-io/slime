/*
* @Author: yangdihang
* @Date: 2020/5/21
*/

syntax = "proto3";

// PluginManager 用于管理插件，以及插件在全局维度上的配置，enable选项可以启用或禁用某插件
// 示例如下：
// apiVersion: microservice.slime.io/v1alpha1
// kind: PluginManager
// metadata:
//   name: gw-cluster-gateway-proxy
//   namespace: gateway-system
// spec:
//   plugin:
//   - enable: true
//     name: envoy.cors
//   - enable: true
//     name: envoy.fault
//   - enable: true
//     name: com.netease.iprestriction
//   - enable: true
//     name: com.netease.transformation
//   - enable: false
//     name: com.netease.resty
//   - enable: true
//     name: com.netease.metadatahub
//   - enable: true
//     name: com.netease.supercache
//     inline:
//       settings:
//         apis_prefix: testremove
//         used_caches:
//           local: {}
//           redis:
//             general:
//               host: 10.107.16.138
//               port: 6379
//             timeout: 100
//   workloadLabels:
//     gw_cluster: gateway-proxy

import "google/protobuf/struct.proto";

package slime.microservice.plugin.v1alpha1;

option go_package = "slime.io/slime/modules/plugin/api/v1alpha1";

message PluginManagerSpec {
    // Zero or more labels that indicate a specific set of pods/VMs whose
    // proxies should be configured to use these additional filters.  The
    // scope of label search is platform dependent. On Kubernetes, for
    // example, the scope includes pods running in all reachable
    // namespaces. Omitting the selector applies the filter to all proxies in
    // the mesh.
    map<string, string> workload_labels = 1;

    repeated Plugin plugin = 2;

    // Names of gateways where the rule should be applied to. Gateway names
    // at the top of the VirtualService (if any) are overridden. The gateway
    // match is independent of sourceLabels.
    repeated string gateways = 3;

    // priority defines the order in which patch sets are applied within a context.
    int32 priority = 4;
}

// +kubebuilder:pruning:PreserveUnknownFields
message Plugin {
    bool enable = 1;
    string name = 2;
    // Deprecated
    google.protobuf.Struct settings = 3;
    enum ListenerType {
        Outbound = 0;
        Inbound = 1;
        Gateway = 2;
    }
    ListenerType listenerType = 4;
    string type_url = 5;
 
    oneof plugin_settings {
        Wasm wasm = 6;
        // plugin compiled inside envoy
        Inline inline = 7;
        Rider rider = 9;
    }
    uint32 port = 8;
    // rawPatch will patch to the generated final envoy filter config patch (EnvoyFilter_EnvoyConfigObjectPatch)
    google.protobuf.Struct rawPatch = 10;
    enum Protocol {
        HTTP = 0;
        Dubbo = 1;
        Generic = 2;
    }
    Protocol protocol = 11;
    string generic_app_protocol = 12;
    bool disable_on_filter_level = 13;
}

// +kubebuilder:pruning:PreserveUnknownFields
message Wasm {
    google.protobuf.Struct settings = 1;
    string plugin_name = 2;
    string url = 3;
    string sha256 = 4;

    oneof image_pull_secret {
        string image_pull_secret_name = 5;
        string image_pull_secret_content = 6;
    }
}

// +kubebuilder:pruning:PreserveUnknownFields
message Rider {
    google.protobuf.Struct settings = 1;
    string plugin_name = 2;
    string url = 3;
    string sha256 = 4;

    oneof image_pull_secret {
        string image_pull_secret_name = 5;
        string image_pull_secret_content = 6;
    }
}

message Inline {
    google.protobuf.Struct settings = 1;
    bool directPatch = 2;
    string fieldPatchTo = 3;
}

