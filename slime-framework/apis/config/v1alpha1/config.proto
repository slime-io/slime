syntax = "proto3";

package slime.config.v1alpha1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/duration.proto";


option go_package = "slime.io/slime/pkg/apis/config/v1alpha1";


message LocalSource {
  string mount = 1;
}

message RemoteSource {
  string address = 1;
}


message Plugin {
  oneof wasm_source {
    LocalSource local = 2;
    RemoteSource remote = 3;
  }
}

message Limiter {
  bool Multicluster = 2;
  enum RateLimitBackend {
    netEaseLocalFlowControl = 0;
    envoyLocalRateLimit = 1;
  }
  RateLimitBackend backend = 3;
  google.protobuf.Duration refresh = 4 [(gogoproto.stdduration) = true];
}

message Global {
  string service = 1;
  string multicluster = 2;
  string istioNamespace = 3;
  string slimeNamespace = 4;
}

message Fence {
  repeated string wormholePort = 2;
}

message Prometheus_Source{
  enum Type{
    Value = 0;
    Group = 1;
  }
  message Handler{
    string query = 1;
    Type type = 2;
  }
  string address = 1;
  map<string, Handler> handlers = 2;
}

message K8S_Source{
  repeated string handlers = 1;
}


message Metric{
  Prometheus_Source prometheus = 1;
  K8S_Source k8s = 2;
}


message Config {
  Plugin plugin = 1;
  Limiter limiter = 2;
  Global global = 3;
  Fence fence = 4;
  Metric metric = 6;
  string name = 5;
  bool enable = 7;
}
