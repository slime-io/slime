/*
* @Author: yangdihang
* @Date: 2020/5/21
*/

syntax = "proto3";
package slime.microservice.limiter.v1alpha2;

option go_package = "slime.io/slime/slime-modules/limiter/api/v1alpha2";

//dispatch envoyFilter to pods in service b.powerful
//and take effect in inbound traffic :9080/default
//apiVersion: microservice.slime.io/v1alpha2
//kind: SmartLimiter
//metadata:
//  name: b
//  namespace: powerful
//spec:
//  sets:
//    _base:
//      descriptor:
//      - action:
//          fill_interval:
//            seconds: 60
//          quota: "10"
//          strategy: "single"
//        conditon: "true"
//        target:
//          port: 9080

//dispatch envoyFilter to pods in service b.powerful
//and take effect in outbound traffic a.test.com:80/r1
//apiVersion: microservice.slime.io/v1alpha2
//kind: SmartLimiter
//metadata:
//  name: b
//  namespace: powerful
//spec:
//  sets:
//    _base:
//      descriptor:
//      - action:
//          fill_interval:
//            seconds: 60
//          quota: "10"
//          strategy: "single"
//        conditon: "true"
//        target:
//          direction: outbound
//          route: a.test.com:80/r1

//dispatch envoyFilter to pods with labels 'gw_cluster: prod-gateway'
//and take effect in outbound a.test.com:80/r1
//apiVersion: microservice.slime.io/v1alpha2
//kind: SmartLimiter
//metadata:
//  name: b
//  namespace: powerful
//spec:
//  gateway: true
//  workloadSelector:
//    gw_cluster: prod-gateway
//  sets:
//    _base:
//      descriptor:
//      - action:
//          fill_interval:
//            seconds: 60
//          quota: "10"
//          strategy: "single"
//        conditon: "true"
//        target:
//          direction: outbound
//          route: a.test.com:80/r1

message SmartLimiterSpec {
    // subset rate-limit,the key is subset name.
    map<string, SmartLimitDescriptors> sets = 1;
    // deprecated, mv to limiter_module.proto
    string rls = 2; // rls 服务地址
    // workload selector , it should not be nil in Gateway Scenarios
    map<string, string> workloadSelector = 4;
    // is gateway
    bool gateway = 5;
    // hostname specify svc host
    string host = 6;
    // rate limit target
    Target target = 7;
}

message SmartLimiterStatus {
    map<string, SmartLimitDescriptors> ratelimitStatus = 1;
    map<string, string> metricStatus = 2;
}

message SmartLimitDescriptor {
    message HeaderMatcher {
        string name = 1;
        // If specified, this regex string is a regular expression rule which implies the entire request
        // header value must match the regex. The rule will not match if only a subsequence of the
        // request header value matches the regex.
        string regex_match = 2;

        // If specified, header match will be performed based on the value of the header.
        string exact_match = 3;

        // * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
        string prefix_match = 4;

        // * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
        string suffix_match = 5;

        // If specified as true, header match will be performed based on whether the header is in the
        // request. If specified as false, header match will be performed based on whether the header is absent.
        bool present_match = 6;

        // If specified, the match result will be inverted before checking. Defaults to false.
        // * The regex ``\d{3}`` does not match the value *1234*, so it will match when inverted.
        bool invert_match = 7;

        // if specified, the exact match the value ""
        bool is_exact_match_empty = 8;

        // similar to present_match, the difference is that the different values have separate token
        // while present_match shares token
        // it only works in envoy.filters.http.ratelimit (global)
        bool present_match_separate = 9;
    }

    message Action {
        string quota = 1;  // 配额
        Duration fill_interval = 2; // 时间
        string strategy= 3; // 策略
    }

    string condition = 1;

    Action action = 2;

    repeated HeaderMatcher match = 3;

    Target target = 4;

    string custom_key = 5;

    string custom_value = 6;
}

message SmartLimitDescriptors {
    // Description of current rate-limit
    repeated SmartLimitDescriptor descriptor = 1;
}

message Duration {

    // Signed seconds of the span of time. Must be from -315,576,000,000
    // to +315,576,000,000 inclusive. Note: these bounds are computed from:
    // 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
    int64 seconds = 1;

    // Signed fractions of a second at nanosecond resolution of the span
    // of time. Durations less than one second are represented with a 0
    // `seconds` field and a positive or negative `nanos` field. For durations
    // of one second or more, a non-zero value for the `nanos` field must be
    // of the same sign as the `seconds` field. Must be from -999,999,999
    // to +999,999,999 inclusive.
    int32 nanos = 2;
}

message Target {
    string direction = 1;  // 进出
    int32 port = 2;
    repeated string route = 3;
    repeated string host = 4;
}

